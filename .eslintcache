[{"D:\\React Project\\lightTheme\\src\\index.js":"1","D:\\React Project\\lightTheme\\src\\App.jsx":"2","D:\\React Project\\lightTheme\\src\\data\\Styles.js":"3","D:\\React Project\\lightTheme\\src\\providers\\ThemeProvider.jsx":"4","D:\\React Project\\lightTheme\\src\\components\\NameBox.jsx":"5","D:\\React Project\\lightTheme\\src\\components\\ThemeSwitcher.jsx":"6","D:\\React Project\\lightTheme\\src\\constants\\index.js":"7","D:\\React Project\\lightTheme\\src\\useTheme.jsx":"8"},{"size":168,"mtime":1638808494000,"results":"9","hashOfConfig":"10"},{"size":704,"mtime":1656092965772,"results":"11","hashOfConfig":"10"},{"size":505,"mtime":1638808494000,"results":"12","hashOfConfig":"10"},{"size":739,"mtime":1656092631410,"results":"13","hashOfConfig":"10"},{"size":248,"mtime":1638808494000,"results":"14","hashOfConfig":"10"},{"size":922,"mtime":1656092928292,"results":"15","hashOfConfig":"10"},{"size":65,"mtime":1638808494000,"results":"16","hashOfConfig":"10"},{"size":170,"mtime":1656063541759,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ke1j11",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Project\\lightTheme\\src\\index.js",[],"D:\\React Project\\lightTheme\\src\\App.jsx",["35","36"],"D:\\React Project\\lightTheme\\src\\data\\Styles.js",[],"D:\\React Project\\lightTheme\\src\\providers\\ThemeProvider.jsx",[],"D:\\React Project\\lightTheme\\src\\components\\NameBox.jsx",[],"D:\\React Project\\lightTheme\\src\\components\\ThemeSwitcher.jsx",["37","38","39"],"import React, { useContext } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\nimport {useTheme} from \"../useTheme\"\nimport { ThemeContext } from \"../providers/ThemeProvider\"\nimport { useState } from \"react\";\n\n\n\nconst ThemeSwitcher = () => {\n  // No need to change *return* part\n  // You have to set themeMode based on context\n  \n  const {isDark,handleDark,themeMode,handleTheme}=useContext(ThemeContext)\n\n  const handleThemeChange = (e) => {\n     handleDark()\n     handleTheme()\n  }\n\n  return (\n    <div className=\"switch-container\">\n      <label className=\"switch\">\n        <input\n          data-testid=\"theme-changer\"\n          type=\"checkbox\"\n          checked={themeMode === THEME_TYPE.DARK}\n          onChange={handleThemeChange}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n      <span className=\"text-color bold\">Dark mode</span>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n","D:\\React Project\\lightTheme\\src\\constants\\index.js",[],"D:\\React Project\\lightTheme\\src\\useTheme.jsx",[],{"ruleId":"40","severity":1,"message":"41","line":4,"column":10,"nodeType":"42","messageId":"43","endLine":4,"endColumn":20},{"ruleId":"40","severity":1,"message":"44","line":12,"column":20,"nodeType":"42","messageId":"43","endLine":12,"endColumn":31},{"ruleId":"40","severity":1,"message":"45","line":3,"column":9,"nodeType":"42","messageId":"43","endLine":3,"endColumn":17},{"ruleId":"40","severity":1,"message":"46","line":5,"column":10,"nodeType":"42","messageId":"43","endLine":5,"endColumn":18},{"ruleId":"40","severity":1,"message":"47","line":13,"column":10,"nodeType":"42","messageId":"43","endLine":13,"endColumn":16},"no-unused-vars","'THEME_TYPE' is defined but never used.","Identifier","unusedVar","'handleTheme' is assigned a value but never used.","'useTheme' is defined but never used.","'useState' is defined but never used.","'isDark' is assigned a value but never used."]
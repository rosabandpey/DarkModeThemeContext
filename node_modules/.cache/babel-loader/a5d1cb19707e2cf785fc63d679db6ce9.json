{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\lightTheme\\\\src\\\\App.jsx\";\nimport React, { useContext } from \"react\";\nimport NameBox from \"./components/NameBox\";\nimport ThemeSwitcher from \"./components/ThemeSwitcher\";\nimport { THEME_TYPE } from \"./constants\";\nimport Styles from \"./data/Styles\";\nimport ThemeProvider, { ThemeContext } from \"./providers/ThemeProvider\"; // No need to change *return* part in both StyleTag and App components\n// You have to set themeMode based on context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StyleTag = () => {\n  const themeMode = setThemeMode(THEME_TYPE.DARK);\n  return /*#__PURE__*/_jsxDEV(\"style\", {\n    children: Styles(themeMode)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\n_c = StyleTag;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: [/*#__PURE__*/_jsxDEV(StyleTag, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSwitcher, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyleTag\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useContext","NameBox","ThemeSwitcher","THEME_TYPE","Styles","ThemeProvider","ThemeContext","StyleTag","themeMode","setThemeMode","DARK","App"],"sources":["D:/React Project/lightTheme/src/App.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport NameBox from \"./components/NameBox\";\nimport ThemeSwitcher from \"./components/ThemeSwitcher\";\nimport { THEME_TYPE } from \"./constants\";\nimport Styles from \"./data/Styles\";\nimport ThemeProvider, { ThemeContext } from \"./providers/ThemeProvider\";\n\n// No need to change *return* part in both StyleTag and App components\n// You have to set themeMode based on context\nconst StyleTag = () => {\n  const themeMode =  setThemeMode(THEME_TYPE.DARK);\n\n  return <style>{Styles(themeMode)}</style>;\n};\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <StyleTag />\n      <NameBox />\n      <ThemeSwitcher />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,aAAP,IAAwBC,YAAxB,QAA4C,2BAA5C,C,CAEA;AACA;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;EACrB,MAAMC,SAAS,GAAIC,YAAY,CAACN,UAAU,CAACO,IAAZ,CAA/B;EAEA,oBAAO;IAAA,UAAQN,MAAM,CAACI,SAAD;EAAd;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAJD;;KAAMD,Q;;AAMN,SAASI,GAAT,GAAe;EACb,oBACE,QAAC,aAAD;IAAA,wBACE,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;MARQA,G;AAUT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
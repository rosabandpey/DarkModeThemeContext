{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\lightTheme\\\\src\\\\providers\\\\ThemeProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //const [isDark,setDarkMode]=useState(false)\n  const [themeMode, setThemeMode] = useState(THEME_TYPE.LIGHT); //   const handleDark=()=>{\n  //     setDarkMode(!isDark)\n  //  }\n\n  const handleTheme = () => {\n    if (themeMode == THEME_TYPE.LIGHT) {\n      setThemeMode(THEME_TYPE.DARK);\n    }\n\n    if (themeMode == THEME_TYPE.DARK) {\n      setThemeMode(THEME_TYPE.LIGHT);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      themeMode,\n      handleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ThemeProvider, \"KHngKLB5hjdDxQGHrZjejvU6O4U=\");\n\n_c = ThemeProvider;\nconst ThemeContext = /*#__PURE__*/createContext();\nexport { ThemeContext };\nexport default ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","THEME_TYPE","ThemeProvider","children","themeMode","setThemeMode","LIGHT","handleTheme","DARK","ThemeContext"],"sources":["D:/React Project/lightTheme/src/providers/ThemeProvider.jsx"],"sourcesContent":["import React from \"react\";\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\n\n\n\nconst ThemeProvider = ({ children }) => {\n  //const [isDark,setDarkMode]=useState(false)\n  const [themeMode,setThemeMode] = useState(THEME_TYPE.LIGHT)\n\n//   const handleDark=()=>{\n//     setDarkMode(!isDark)\n//  }\n  const handleTheme=()=>{\n\n    if(themeMode==THEME_TYPE.LIGHT)\n    {\n        setThemeMode(THEME_TYPE.DARK)\n    }\n    if(themeMode==THEME_TYPE.DARK)\n    {\n     setThemeMode(THEME_TYPE.LIGHT);\n        }\n  }\n \n\n  return <ThemeContext.Provider value={{themeMode,handleTheme}}>{children}</ThemeContext.Provider>;\n};\n\n\n\nconst ThemeContext = createContext();\n\nexport { ThemeContext }\n\nexport default ThemeProvider;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAIA,MAAMC,aAAa,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACtC;EACA,MAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BL,QAAQ,CAACC,UAAU,CAACK,KAAZ,CAAzC,CAFsC,CAIxC;EACA;EACA;;EACE,MAAMC,WAAW,GAAC,MAAI;IAEpB,IAAGH,SAAS,IAAEH,UAAU,CAACK,KAAzB,EACA;MACID,YAAY,CAACJ,UAAU,CAACO,IAAZ,CAAZ;IACH;;IACD,IAAGJ,SAAS,IAAEH,UAAU,CAACO,IAAzB,EACA;MACCH,YAAY,CAACJ,UAAU,CAACK,KAAZ,CAAZ;IACI;EACN,CAVD;;EAaA,oBAAO,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAACF,SAAD;MAAWG;IAAX,CAA9B;IAAA,UAAwDJ;EAAxD;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CArBD;;GAAMD,a;;KAAAA,a;AAyBN,MAAMO,YAAY,gBAAGV,aAAa,EAAlC;AAEA,SAASU,YAAT;AAEA,eAAeP,aAAf"},"metadata":{},"sourceType":"module"}
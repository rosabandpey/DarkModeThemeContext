{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\lightTheme\\\\src\\\\components\\\\ThemeSwitcher.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\nimport { useTheme } from \"../useTheme\";\nimport { ThemeContext } from \"../providers/ThemeProvider\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeSwitcher = () => {\n  _s();\n\n  // No need to change *return* part\n  // You have to set themeMode based on context\n  const [themeMode, handleTheme] = useContext(ThemeContext);\n\n  const handleThemeChange = e => {\n    handleDark();\n    console.log(isDark);\n    handleTheme();\n    console.log(themeMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"switch-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"theme-changer\",\n        type: \"checkbox\",\n        checked: themeMode === THEME_TYPE.DARK,\n        onChange: handleThemeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-color bold\",\n      children: \"Dark mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeSwitcher, \"kV2Q4iNc0JAbAhWNkmVjXyyqyPk=\");\n\n_c = ThemeSwitcher;\nexport default ThemeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"names":["React","useContext","THEME_TYPE","useTheme","ThemeContext","useState","ThemeSwitcher","themeMode","handleTheme","handleThemeChange","e","handleDark","console","log","isDark","DARK"],"sources":["D:/React Project/lightTheme/src/components/ThemeSwitcher.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\nimport {useTheme} from \"../useTheme\"\nimport { ThemeContext } from \"../providers/ThemeProvider\"\nimport { useState } from \"react\";\n\n\n\nconst ThemeSwitcher = () => {\n  // No need to change *return* part\n  // You have to set themeMode based on context\n  const [themeMode,handleTheme] = useContext(ThemeContext)\n  \n \n\n\n  const handleThemeChange = (e) => {\n     handleDark()\n     console.log(isDark)\n     handleTheme()\n     console.log(themeMode)\n  }\n\n  return (\n    <div className=\"switch-container\">\n      <label className=\"switch\">\n        <input\n          data-testid=\"theme-changer\"\n          type=\"checkbox\"\n          checked={themeMode === THEME_TYPE.DARK}\n          onChange={handleThemeChange}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n      <span className=\"text-color bold\">Dark mode</span>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAIA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B;EACA;EACA,MAAM,CAACC,SAAD,EAAWC,WAAX,IAA0BP,UAAU,CAACG,YAAD,CAA1C;;EAKA,MAAMK,iBAAiB,GAAIC,CAAD,IAAO;IAC9BC,UAAU;IACVC,OAAO,CAACC,GAAR,CAAYC,MAAZ;IACAN,WAAW;IACXI,OAAO,CAACC,GAAR,CAAYN,SAAZ;EACF,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,kBAAf;IAAA,wBACE;MAAO,SAAS,EAAC,QAAjB;MAAA,wBACE;QACE,eAAY,eADd;QAEE,IAAI,EAAC,UAFP;QAGE,OAAO,EAAEA,SAAS,KAAKL,UAAU,CAACa,IAHpC;QAIE,QAAQ,EAAEN;MAJZ;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAM,SAAS,EAAC;MAAhB;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAM,SAAS,EAAC,iBAAhB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA7BD;;GAAMH,a;;KAAAA,a;AA+BN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}
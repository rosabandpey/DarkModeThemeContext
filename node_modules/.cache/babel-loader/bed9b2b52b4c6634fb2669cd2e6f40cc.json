{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\lightTheme\\\\src\\\\providers\\\\ThemeProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isDark, setDarkMode] = useState(false);\n  const [themeMode, setThemeMode] = useState(THEME_TYPE.LIGHT);\n\n  const handleTheme = () => {\n    if (isDark) {\n      setThemeMode(THEME_TYPE.LIGHT);\n    }\n\n    if (!isDark) {\n      setThemeMode(THEME_TYPE.DARK);\n    }\n  };\n\n  const handleDark = () => {\n    setDarkMode(!isDark);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDark,\n      handleDark,\n      themeMode,\n      handleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ThemeProvider, \"/mTe19hj2ErlAnByL6r0dfvpBlQ=\");\n\n_c = ThemeProvider;\nconst ThemeContext = /*#__PURE__*/createContext({\n  themeMode\n});\nexport { ThemeContext };\nexport default ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","THEME_TYPE","ThemeProvider","children","isDark","setDarkMode","themeMode","setThemeMode","LIGHT","handleTheme","DARK","handleDark","ThemeContext"],"sources":["D:/React Project/lightTheme/src/providers/ThemeProvider.jsx"],"sourcesContent":["import React from \"react\";\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\n\n\n\nconst ThemeProvider = ({ children }) => {\n  const [isDark,setDarkMode]=useState(false)\n  const [themeMode,setThemeMode] = useState(THEME_TYPE.LIGHT)\n\n  const handleTheme=()=>{\n\n    if(isDark)\n    {\n     setThemeMode(THEME_TYPE.LIGHT);\n    }\n    if(!isDark)\n    {\n     setThemeMode(THEME_TYPE.DARK);\n    }\n  }\n  const handleDark=()=>{\n     setDarkMode(!isDark)\n  }\n\n  return <ThemeContext.Provider value={{isDark,handleDark,themeMode,handleTheme}}>{children}</ThemeContext.Provider>;\n};\n\n\n\nconst ThemeContext = createContext({themeMode});\n\nexport { ThemeContext }\n\nexport default ThemeProvider;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAIA,MAAMC,aAAa,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACtC,MAAM,CAACC,MAAD,EAAQC,WAAR,IAAqBL,QAAQ,CAAC,KAAD,CAAnC;EACA,MAAM,CAACM,SAAD,EAAWC,YAAX,IAA2BP,QAAQ,CAACC,UAAU,CAACO,KAAZ,CAAzC;;EAEA,MAAMC,WAAW,GAAC,MAAI;IAEpB,IAAGL,MAAH,EACA;MACCG,YAAY,CAACN,UAAU,CAACO,KAAZ,CAAZ;IACA;;IACD,IAAG,CAACJ,MAAJ,EACA;MACCG,YAAY,CAACN,UAAU,CAACS,IAAZ,CAAZ;IACA;EACF,CAVD;;EAWA,MAAMC,UAAU,GAAC,MAAI;IAClBN,WAAW,CAAC,CAACD,MAAF,CAAX;EACF,CAFD;;EAIA,oBAAO,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAACA,MAAD;MAAQO,UAAR;MAAmBL,SAAnB;MAA6BG;IAA7B,CAA9B;IAAA,UAA0EN;EAA1E;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CApBD;;GAAMD,a;;KAAAA,a;AAwBN,MAAMU,YAAY,gBAAGb,aAAa,CAAC;EAACO;AAAD,CAAD,CAAlC;AAEA,SAASM,YAAT;AAEA,eAAeV,aAAf"},"metadata":{},"sourceType":"module"}